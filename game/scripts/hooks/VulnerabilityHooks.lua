--
-- Copyright (c) Uladzislau Nikalayevich <thenormalnij@gmail.com>. All rights reserved.
-- Licensed under the MIT license. See LICENSE file in the project root for details.
--

---@type CoopPlayers
local CoopPlayers = ModRequire "../CoopPlayers.lua"
---@type HookUtils
local HookUtils = ModRequire "../HookUtils.lua"

---@class VulnerabilityHooks
local VulnerabilityHooks = {}

local SPLIT_FLAGS = {
    ["Frame"] = true,
    ["Super"] = true,
    ["TraitInvulnerability"] = true,
    ["LastStand"] = true,
}

function VulnerabilityHooks.InitHooks()
    HookUtils.replace("SetPlayerInvulnerable", VulnerabilityHooks.SetPlayerInvulnerable)
    HookUtils.replace("SetPlayerVulnerable", VulnerabilityHooks.SetPlayerVulnerable)
end

function VulnerabilityHooks.SetPlayerInvulnerable(flag)
    if flag == nil then
        flag = "Generic"
    end

    CurrentRun.InvulnerableFlags[flag] = true
    if SPLIT_FLAGS[flag] then
        local hero = CurrentRun.Hero
        hero.InvulnerableFlags[flag] = true
        SetInvulnerable({ Id = hero.ObjectId })
    else
        for _, hero in CoopPlayers.PlayersIterator() do
            hero.InvulnerableFlags[flag] = true
            if not hero.IsDead and hero.ObjectId then
                SetInvulnerable { Id = hero.ObjectId }
            end
        end
    end
end

function VulnerabilityHooks.SetPlayerVulnerable(flag)
    if flag == nil then
        flag = "Generic"
    end

    CurrentRun.InvulnerableFlags[flag] = nil
    if SPLIT_FLAGS[flag] then
        local hero = CurrentRun.Hero
        hero.InvulnerableFlags[flag] = nil
        if IsEmpty(hero.InvulnerableFlags) then
            SetVulnerable { Id = hero.ObjectId }
        end
    else
        for _, hero in CoopPlayers.PlayersIterator() do
            hero.InvulnerableFlags[flag] = nil
            if not hero.IsDead and hero.ObjectId and IsEmpty(hero.InvulnerableFlags) then
                SetVulnerable { Id = hero.ObjectId }
            end
        end
    end
end

return VulnerabilityHooks
